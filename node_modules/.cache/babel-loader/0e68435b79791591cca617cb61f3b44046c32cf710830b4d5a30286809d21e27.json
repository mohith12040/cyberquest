{"ast":null,"code":"var _jsxFileName = \"/Users/mohithneravati/Cyber quest/cyberquest/src/Login.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { supabase } from './supabaseClient';\nimport { useNavigate, Link } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Login = () => {\n  _s();\n  const navigate = useNavigate();\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [errorMsg, setErrorMsg] = useState('');\n  const handleLogin = async e => {\n    e.preventDefault();\n    const {\n      error\n    } = await supabase.auth.signInWithPassword({\n      email,\n      password\n    });\n    if (error) {\n      setErrorMsg(error.message);\n    } else {\n      navigate('/');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"max-w-md mx-auto p-6 bg-gray-800 rounded-lg shadow-lg mt-12 text-white\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-2xl font-bold mb-4\",\n      children: \"Login to CyberQuest\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), errorMsg && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"text-red-400 mb-2\",\n      children: errorMsg\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 20\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleLogin,\n      className: \"space-y-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"w-full p-2 rounded bg-gray-700\",\n        type: \"email\",\n        placeholder: \"Email\",\n        value: email,\n        onChange: e => setEmail(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"w-full p-2 rounded bg-gray-700\",\n        type: \"password\",\n        placeholder: \"Password\",\n        value: password,\n        onChange: e => setPassword(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"w-full bg-purple-600 hover:bg-purple-700 py-2 rounded font-semibold\",\n        type: \"submit\",\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"mt-4 text-sm text-gray-400 text-center\",\n      children: [\"Don\\u2019t have an account?\", ' ', /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/signup\",\n        className: \"text-purple-400 underline\",\n        children: \"Sign up\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n};\n_s(Login, \"MAc09nghk12nbRt81GBYDeqfvVE=\", false, function () {\n  return [useNavigate];\n});\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","supabase","useNavigate","Link","jsxDEV","_jsxDEV","Login","_s","navigate","email","setEmail","password","setPassword","errorMsg","setErrorMsg","handleLogin","e","preventDefault","error","auth","signInWithPassword","message","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","placeholder","value","onChange","target","to","_c","$RefreshReg$"],"sources":["/Users/mohithneravati/Cyber quest/cyberquest/src/Login.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { supabase } from './supabaseClient';\nimport { useNavigate, Link } from 'react-router-dom';\n\nconst Login = () => {\n  const navigate = useNavigate();\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [errorMsg, setErrorMsg] = useState('');\n\n  const handleLogin = async (e) => {\n    e.preventDefault();\n    const { error } = await supabase.auth.signInWithPassword({\n      email,\n      password,\n    });\n\n    if (error) {\n      setErrorMsg(error.message);\n    } else {\n      navigate('/');\n    }\n  };\n\n  return (\n    <div className=\"max-w-md mx-auto p-6 bg-gray-800 rounded-lg shadow-lg mt-12 text-white\">\n      <h2 className=\"text-2xl font-bold mb-4\">Login to CyberQuest</h2>\n      {errorMsg && <p className=\"text-red-400 mb-2\">{errorMsg}</p>}\n      <form onSubmit={handleLogin} className=\"space-y-4\">\n        <input\n          className=\"w-full p-2 rounded bg-gray-700\"\n          type=\"email\"\n          placeholder=\"Email\"\n          value={email}\n          onChange={(e) => setEmail(e.target.value)}\n        />\n        <input\n          className=\"w-full p-2 rounded bg-gray-700\"\n          type=\"password\"\n          placeholder=\"Password\"\n          value={password}\n          onChange={(e) => setPassword(e.target.value)}\n        />\n        <button\n          className=\"w-full bg-purple-600 hover:bg-purple-700 py-2 rounded font-semibold\"\n          type=\"submit\"\n        >\n          Login\n        </button>\n      </form>\n\n      {/* ðŸ”½ Add this below the form */}\n      <p className=\"mt-4 text-sm text-gray-400 text-center\">\n        Donâ€™t have an account?{' '}\n        <Link to=\"/signup\" className=\"text-purple-400 underline\">\n          Sign up\n        </Link>\n      </p>\n    </div>\n  );\n};\n\nexport default Login;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}