{"ast":null,"code":"// src/pages/RPGDashboard.js\nimport React,{useEffect,useState}from'react';import{useParams}from'react-router-dom';import sampleChallenges from'../data/sampleChallenges';import{marked}from'marked';import{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";function RPGDashboard(){const{id}=useParams();const challenge=sampleChallenges.find(c=>c.id===parseInt(id));const[quizStarted,setQuizStarted]=useState(false);const[shuffledQuestions,setShuffledQuestions]=useState([]);const[currentQuestion,setCurrentQuestion]=useState(0);const[selectedAnswers,setSelectedAnswers]=useState([]);const[score,setScore]=useState(0);const[showResults,setShowResults]=useState(false);useEffect(()=>{var _challenge$quiz;if(challenge!==null&&challenge!==void 0&&(_challenge$quiz=challenge.quiz)!==null&&_challenge$quiz!==void 0&&_challenge$quiz.questions){const shuffled=[...challenge.quiz.questions].sort(()=>0.5-Math.random()).slice(0,10);setShuffledQuestions(shuffled);}},[challenge]);const handleAnswer=index=>{const correct=shuffledQuestions[currentQuestion].correctIndex;setSelectedAnswers([...selectedAnswers,index]);if(index===correct)setScore(score+1);if(currentQuestion+1<shuffledQuestions.length){setCurrentQuestion(currentQuestion+1);}else{setShowResults(true);}};if(!challenge)return/*#__PURE__*/_jsx(\"div\",{className:\"text-white p-4\",children:\"Challenge not found\"});return/*#__PURE__*/_jsxs(\"div\",{className:\"p-6 text-white min-h-screen bg-gradient-to-b from-gray-900 via-gray-800 to-gray-900\",children:[/*#__PURE__*/_jsx(\"h1\",{className:\"text-3xl font-bold mb-2\",children:challenge.title}),/*#__PURE__*/_jsxs(\"p\",{className:\"text-gray-400 mb-6\",children:[\"XP: \",challenge.xp]}),!quizStarted&&!showResults&&/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsxs(\"div\",{className:\"prose prose-invert max-w-none mb-6 whitespace-pre-line\",children:[/*#__PURE__*/_jsx(\"h2\",{className:\"text-2xl font-semibold mb-4\",children:\"Tutorial\"}),/*#__PURE__*/_jsx(\"div\",{dangerouslySetInnerHTML:{__html:marked.parse(challenge.tutorial)}})]}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>setQuizStarted(true),className:\"bg-purple-600 hover:bg-purple-700 px-5 py-2 rounded text-white font-semibold\",children:\"Start Quiz\"})]}),quizStarted&&!showResults&&shuffledQuestions.length>0&&/*#__PURE__*/_jsxs(\"div\",{className:\"mt-8\",children:[/*#__PURE__*/_jsxs(\"p\",{className:\"text-sm text-gray-400 mb-2\",children:[\"Question \",currentQuestion+1,\" of \",shuffledQuestions.length]}),/*#__PURE__*/_jsxs(\"div\",{className:\"bg-gray-800 rounded-lg p-6 mb-4\",children:[/*#__PURE__*/_jsx(\"h2\",{className:\"text-xl font-bold mb-4\",children:shuffledQuestions[currentQuestion].question}),/*#__PURE__*/_jsx(\"div\",{className:\"space-y-3\",children:shuffledQuestions[currentQuestion].options.map((option,i)=>/*#__PURE__*/_jsx(\"button\",{onClick:()=>handleAnswer(i),className:\"block w-full text-left px-4 py-3 rounded bg-gray-700 hover:bg-purple-600 transition-colors\",children:option},i))})]})]}),showResults&&/*#__PURE__*/_jsxs(\"div\",{className:\"mt-10 bg-gray-800 p-6 rounded-lg shadow-lg\",children:[/*#__PURE__*/_jsx(\"h2\",{className:\"text-2xl font-bold mb-2\",children:\"Quiz Results\"}),/*#__PURE__*/_jsxs(\"p\",{className:\"text-gray-300 mb-4\",children:[\"You scored \",score,\" out of \",shuffledQuestions.length]}),/*#__PURE__*/_jsx(\"div\",{className:\"space-y-4\",children:shuffledQuestions.map((q,i)=>/*#__PURE__*/_jsxs(\"div\",{className:\"p-3 rounded border \".concat(selectedAnswers[i]===q.correctIndex?'border-green-500':'border-red-500'),children:[/*#__PURE__*/_jsxs(\"p\",{className:\"font-semibold\",children:[\"Q\",i+1,\": \",q.question]}),/*#__PURE__*/_jsxs(\"p\",{children:[\"Your Answer: \",/*#__PURE__*/_jsx(\"span\",{className:\"italic\",children:q.options[selectedAnswers[i]]})]}),/*#__PURE__*/_jsxs(\"p\",{children:[\"Correct Answer: \",/*#__PURE__*/_jsx(\"span\",{className:\"font-bold text-green-400\",children:q.options[q.correctIndex]})]})]},i))}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>{setQuizStarted(false);setShowResults(false);setCurrentQuestion(0);setSelectedAnswers([]);setScore(0);},className:\"mt-6 bg-purple-600 hover:bg-purple-700 px-4 py-2 rounded\",children:\"Restart Quest\"})]})]});}export default RPGDashboard;","map":{"version":3,"names":["React","useEffect","useState","useParams","sampleChallenges","marked","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","RPGDashboard","id","challenge","find","c","parseInt","quizStarted","setQuizStarted","shuffledQuestions","setShuffledQuestions","currentQuestion","setCurrentQuestion","selectedAnswers","setSelectedAnswers","score","setScore","showResults","setShowResults","_challenge$quiz","quiz","questions","shuffled","sort","Math","random","slice","handleAnswer","index","correct","correctIndex","length","className","children","title","xp","dangerouslySetInnerHTML","__html","parse","tutorial","onClick","question","options","map","option","i","q","concat"],"sources":["/Users/mohithneravati/Cyber quest/cyberquest/src/pages/RPGDashboard.js"],"sourcesContent":["// src/pages/RPGDashboard.js\nimport React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport sampleChallenges from '../data/sampleChallenges';\nimport { marked } from 'marked';\n\nfunction RPGDashboard() {\n  const { id } = useParams();\n  const challenge = sampleChallenges.find((c) => c.id === parseInt(id));\n\n  const [quizStarted, setQuizStarted] = useState(false);\n  const [shuffledQuestions, setShuffledQuestions] = useState([]);\n  const [currentQuestion, setCurrentQuestion] = useState(0);\n  const [selectedAnswers, setSelectedAnswers] = useState([]);\n  const [score, setScore] = useState(0);\n  const [showResults, setShowResults] = useState(false);\n\n  useEffect(() => {\n    if (challenge?.quiz?.questions) {\n      const shuffled = [...challenge.quiz.questions].sort(() => 0.5 - Math.random()).slice(0, 10);\n      setShuffledQuestions(shuffled);\n    }\n  }, [challenge]);\n\n  const handleAnswer = (index) => {\n    const correct = shuffledQuestions[currentQuestion].correctIndex;\n    setSelectedAnswers([...selectedAnswers, index]);\n    if (index === correct) setScore(score + 1);\n\n    if (currentQuestion + 1 < shuffledQuestions.length) {\n      setCurrentQuestion(currentQuestion + 1);\n    } else {\n      setShowResults(true);\n    }\n  };\n\n  if (!challenge) return <div className=\"text-white p-4\">Challenge not found</div>;\n\n  return (\n    <div className=\"p-6 text-white min-h-screen bg-gradient-to-b from-gray-900 via-gray-800 to-gray-900\">\n      <h1 className=\"text-3xl font-bold mb-2\">{challenge.title}</h1>\n      <p className=\"text-gray-400 mb-6\">XP: {challenge.xp}</p>\n\n      {!quizStarted && !showResults && (\n        <>\n          <div className=\"prose prose-invert max-w-none mb-6 whitespace-pre-line\">\n            <h2 className=\"text-2xl font-semibold mb-4\">Tutorial</h2>\n            <div dangerouslySetInnerHTML={{ __html: marked.parse(challenge.tutorial) }} />\n          </div>\n          <button\n            onClick={() => setQuizStarted(true)}\n            className=\"bg-purple-600 hover:bg-purple-700 px-5 py-2 rounded text-white font-semibold\"\n          >\n            Start Quiz\n          </button>\n        </>\n      )}\n\n      {quizStarted && !showResults && shuffledQuestions.length > 0 && (\n        <div className=\"mt-8\">\n          <p className=\"text-sm text-gray-400 mb-2\">Question {currentQuestion + 1} of {shuffledQuestions.length}</p>\n          <div className=\"bg-gray-800 rounded-lg p-6 mb-4\">\n            <h2 className=\"text-xl font-bold mb-4\">{shuffledQuestions[currentQuestion].question}</h2>\n            <div className=\"space-y-3\">\n              {shuffledQuestions[currentQuestion].options.map((option, i) => (\n                <button\n                  key={i}\n                  onClick={() => handleAnswer(i)}\n                  className=\"block w-full text-left px-4 py-3 rounded bg-gray-700 hover:bg-purple-600 transition-colors\"\n                >\n                  {option}\n                </button>\n              ))}\n            </div>\n          </div>\n        </div>\n      )}\n\n      {showResults && (\n        <div className=\"mt-10 bg-gray-800 p-6 rounded-lg shadow-lg\">\n          <h2 className=\"text-2xl font-bold mb-2\">Quiz Results</h2>\n          <p className=\"text-gray-300 mb-4\">You scored {score} out of {shuffledQuestions.length}</p>\n          <div className=\"space-y-4\">\n            {shuffledQuestions.map((q, i) => (\n              <div\n                key={i}\n                className={`p-3 rounded border ${selectedAnswers[i] === q.correctIndex ? 'border-green-500' : 'border-red-500'}`}\n              >\n                <p className=\"font-semibold\">Q{i + 1}: {q.question}</p>\n                <p>Your Answer: <span className=\"italic\">{q.options[selectedAnswers[i]]}</span></p>\n                <p>Correct Answer: <span className=\"font-bold text-green-400\">{q.options[q.correctIndex]}</span></p>\n              </div>\n            ))}\n          </div>\n          <button\n            onClick={() => {\n              setQuizStarted(false);\n              setShowResults(false);\n              setCurrentQuestion(0);\n              setSelectedAnswers([]);\n              setScore(0);\n            }}\n            className=\"mt-6 bg-purple-600 hover:bg-purple-700 px-4 py-2 rounded\"\n          >\n            Restart Quest\n          </button>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default RPGDashboard;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}